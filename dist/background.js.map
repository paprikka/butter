{"version":3,"file":"background.js","sources":["../src/auto-updater.ts","../background.ts"],"sourcesContent":["import { log } from \"./log\";\n\nexport const initAutoUpdater = (useSoftReload = false) => {\n  log(\"initAutoUpdater\");\n  const loop = async () => {\n    const currentTS = await fetch(\"./.timestamp\").then((_) => _.json());\n\n    while (true) {\n      log(\"checking for updates...\");\n      const newTS = await fetch(\"./.timestamp\")\n        .then((_) => _.json())\n        .catch(() => \"unknown\");\n      if (newTS === \"unknown\" || newTS === currentTS) {\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } else {\n        log(`new update found! ${new Date(currentTS)} -> ${new Date(newTS)}`);\n        if (useSoftReload) {\n          window.location.reload();\n        } else {\n          chrome.runtime.reload();\n        }\n        return;\n      }\n    }\n  };\n\n  loop();\n};\n","import { initAutoUpdater } from \"./src/auto-updater\";\nimport { log } from \"./src/log\";\nimport { ClientMessage } from \"./src/extension-message\";\nlog(\"init\");\n\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.tabs.create({ url: chrome.runtime.getURL(\"first-run.html\") });\n});\n\ninitAutoUpdater();\n\nchrome.runtime.onMessage.addListener(function (request: ClientMessage, sender) {\n  if (request.type === \"action:update-badge\") {\n    if (request.text) {\n      chrome.action.setBadgeText({\n        text: request.text,\n        tabId: sender.tab?.id,\n      });\n    }\n\n    if (request.color) {\n      chrome.action.setBadgeBackgroundColor({\n        color: request.color,\n        tabId: sender.tab?.id,\n      });\n    }\n  }\n\n  return true;\n});\n"],"names":["initAutoUpdater","useSoftReload","log","currentTS","fetch","then","_","json","newTS","catch","Promise","resolve","setTimeout","Date","window","location","reload","chrome","runtime","onInstalled","addListener","tabs","create","url","getURL","onMessage","request","sender","type","text","action","setBadgeText","tabId","tab","id","color","setBadgeBackgroundColor"],"mappings":"6BAEaA,MAAAA,EAAkBA,CAACC,EAAgB,KAAU,CACxDC,EAAI,iBAAiB,GACR,SAAY,CACjBC,MAAAA,EAAY,MAAMC,MAAM,cAAc,EAAEC,KAAMC,GAAMA,EAAEC,KAAAA,CAAM,EAElE,OAAa,CACXL,EAAI,yBAAyB,EAC7B,MAAMM,EAAQ,MAAMJ,MAAM,cAAc,EACrCC,KAAYC,GAAAA,EAAEC,KAAM,CAAA,EACpBE,MAAM,IAAM,SAAS,EACpBD,GAAAA,IAAU,WAAaA,IAAUL,EACnC,MAAM,IAAIO,QAASC,GAAYC,WAAWD,EAAS,GAAI,CAAC,MACnD,CACAT,EAAA,qBAAoB,IAAIW,KAAKV,CAAS,QAAQ,IAAIU,KAAKL,CAAK,GAAG,EAChEP,EACFa,OAAOC,SAASC,SAEhBC,OAAOC,QAAQF,SAEjB,QAEJ,IAIJ,ECxBAd,EAAI,MAAM,EAEVe,OAAOC,QAAQC,YAAYC,YAAY,IAAM,CAC3CH,OAAOI,KAAKC,OAAO,CAAEC,IAAKN,OAAOC,QAAQM,OAAO,gBAAgB,CAAA,CAAG,CACrE,CAAC,EAEDxB,IAEAiB,OAAOC,QAAQO,UAAUL,YAAY,SAAUM,EAAwBC,EAAQ,SACzED,OAAAA,EAAQE,OAAS,wBACfF,EAAQG,MACVZ,OAAOa,OAAOC,aAAa,CACzBF,KAAMH,EAAQG,KACdG,OAAOL,EAAAA,EAAOM,MAAPN,YAAAA,EAAYO,EAAAA,CACpB,EAGCR,EAAQS,OACVlB,OAAOa,OAAOM,wBAAwB,CACpCD,MAAOT,EAAQS,MACfH,OAAOL,EAAAA,EAAOM,MAAPN,YAAAA,EAAYO,EAAAA,CACpB,GAIE,EACT,CAAC"}