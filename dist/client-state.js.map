{"version":3,"file":"client-state.js","sources":["../src/wait.ts","../src/client-state.ts"],"sourcesContent":["export const wait = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","import { TabStatus } from \"./tab-status\";\nimport { SponsoredTimestamp } from \"./watcher/detector\";\n\nexport type ClientState = {\n  tabStatus: TabStatus;\n  isBlockerEnabled: boolean;\n\n  foundSponsoredTimestamps: SponsoredTimestamp[];\n};\n\nexport type ClientStore = {\n  set: (delta: Partial<ClientState>) => void;\n\n  state: ClientState;\n};\n\nexport const defaultState: ClientState = {\n  tabStatus: \"idle\",\n  isBlockerEnabled: false,\n\n  foundSponsoredTimestamps: [],\n};\n\nexport const makeStore = (): ClientStore => ({\n  state: { ...defaultState },\n\n  set(delta: Partial<ClientState>) {\n    Object.assign(this.state, delta);\n  },\n});\n"],"names":["wait","ms","Promise","setTimeout","resolve","defaultState","tabStatus","isBlockerEnabled","foundSponsoredTimestamps","makeStore","state","set","delta","assign"],"mappings":"AAAaA,MAAAA,EAAQC,GACnB,IAAIC,QAAqBC,GAAAA,WAAWC,EAASH,CAAE,CAAC,ECerCI,EAA4B,CACvCC,UAAW,OACXC,iBAAkB,GAElBC,yBAA0B,CAAA,CAC5B,EAEaC,EAAYA,KAAoB,CAC3CC,MAAO,CAAE,GAAGL,CAAa,EAEzBM,IAAIC,EAA6B,CACxBC,OAAAA,OAAO,KAAKH,MAAOE,CAAK,CACjC,CACF"}